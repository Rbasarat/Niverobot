stages:
  - build
  - infrastructure
  - deploy
#
#build-python:
#  image: python:3.8
#  stage: build
#  before_script:
#    - cd Niverobot/Niverobot.Dateparser
#  script:
#    - python -m pip install -r requirements.txt
#    - python -m grpc_tools.protoc -I../Niverobot.Protos --python_out=. --grpc_python_out=. ../Niverobot.Protos/dateparser.proto
#    - cp -a . $CI_PROJECT_DIR/artifacts
#  artifacts:
#    paths:
#      - $CI_PROJECT_DIR/artifacts

#build-dotnet:
#  image: mcr.microsoft.com/dotnet/core/sdk:3.1
#  before_script:
#    - cd Niverobot
#    - dotnet restore
#  script:
#    - dotnet build --configuration release
#    - dotnet publish --configuration release --output $CI_PROJECT_DIR/artifacts/Niverobot.Consumer/ Niverobot.Consumer/Niverobot.Consumer.csproj
#    - dotnet publish --configuration release  --output $CI_PROJECT_DIR/artifacts/Niverobot.WebApi/ Niverobot.WebApi/Niverobot.WebApi.csproj
#  stage: build
#  artifacts:
#    paths:
#      - artifacts/Niverobot.WebApi/
#      - artifacts/Niverobot.Consumer/


pulumi-up:
  stage: infrastructure
  image: mcr.microsoft.com/dotnet/core/sdk:3.1-buster
  script:
    - cd Niverobot/Niverobot.Infrastructure
    - chmod +x ./scripts/*.sh
    - ./scripts/pulumi-up.sh
  artifacts:
    paths:
      - pulumi-log.txt
  only:
    - master

pulumi-preview:
  stage: infrastructure
  image: mcr.microsoft.com/dotnet/core/sdk:3.1-buster
  script:
    - cd Niverobot/Niverobot.Infrastructure
    - chmod +x ./scripts/*.sh
    - ./scripts/pulumi-preview.sh
  only:
    - merge_requests

#release:
#  image: docker:19.03.1
#  services:
#    - docker:19.03.1-dind
#  # only:
#  #   - master
#  before_script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - cd Niverobot
#  script:
#    - docker build -t $CI_REGISTRY/$REGISTRY_USER/niverobot/niverobot:$CI_COMMIT_SHORT_SHA -f Niverobot.WebApi/Dockerfile .
#    - docker push $CI_REGISTRY/$REGISTRY_USER/niverobot/niverobot:$CI_COMMIT_SHORT_SHA
#    - docker build -t $CI_REGISTRY/$REGISTRY_USER/niverobot/dateparser:$CI_COMMIT_SHORT_SHA -f Niverobot.Dateparser/Dockerfile .
#    - docker push $CI_REGISTRY/$REGISTRY_USER/niverobot/dateparser:$CI_COMMIT_SHORT_SHA
#    - docker build -t $CI_REGISTRY/$REGISTRY_USER/niverobot/consumer:$CI_COMMIT_SHORT_SHA -f Niverobot.Consumer/Dockerfile .
#    - docker push $CI_REGISTRY/$REGISTRY_USER/niverobot/consumer:$CI_COMMIT_SHORT_SHA
#  after_script:
#    - docker logout $CI_REGISTRY
#  stage: release
#
#deploy:
#  image: ubuntu:latest
#  # only:
#  #   - master
#  stage: deploy
#  before_script:
#    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#    - mkdir -p ~/.ssh && touch ~/.ssh/known_hosts
#    - ssh-keyscan -t rsa 51.83.74.19 > ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#
#  script:
#    - ssh deployer@51.83.74.19 docker login -u $GITLAB_USER_NAME -p $ACCESS_TOKEN $CI_REGISTRY
#    - ssh deployer@51.83.74.19 docker pull $CI_REGISTRY/$REGISTRY_USER/niverobot/niverobot:$CI_COMMIT_SHORT_SHA
#    - ssh deployer@51.83.74.19 docker pull $CI_REGISTRY/$REGISTRY_USER/niverobot/dateparser:$CI_COMMIT_SHORT_SHA
#    - ssh deployer@51.83.74.19 docker pull $CI_REGISTRY/$REGISTRY_USER/niverobot/consumer:$CI_COMMIT_SHORT_SHA
#    - ssh deployer@51.83.74.19 docker stop niverobot dateparser consumer
#    - ssh deployer@51.83.74.19 docker rm niverobot dateparser consumer
#    - ssh deployer@51.83.74.19 docker run -d --name niverobot --network niverobot_default -e BotConfiguration__BotToken=$BOT_TOKEN -e ConnectionStrings__SqlServer=$CONNECTION_STRING_SQL -e ConnectionStrings__DateParser=$CONNECTION_STRING_DATEPARSER -p 5000:80 -v /home/niverhawk/niverobot:/app/Logs/Niverobot.WebApi $CI_REGISTRY/niverhawk/niverobot/niverobot:$CI_COMMIT_SHORT_SHA
#    - ssh deployer@51.83.74.19 docker run -d --name dateparser --network niverobot_default $CI_REGISTRY/niverhawk/niverobot/dateparser:$CI_COMMIT_SHORT_SHA 
#    - ssh deployer@51.83.74.19 docker run -d --name consumer --network niverobot_default -e BotConfiguration__BotToken=$BOT_TOKEN -e ConnectionStrings__SqlServer=$CONNECTION_STRING_SQL -e ConnectionStrings__DateParser=$CONNECTION_STRING_DATEPARSER  $CI_REGISTRY/niverhawk/niverobot/consumer:$CI_COMMIT_SHORT_SHA